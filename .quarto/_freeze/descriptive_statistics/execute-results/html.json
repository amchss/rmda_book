{
  "hash": "be965d4b4b626ef819312851b3a28987",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Descriptive Analysis\n\n\nThe goal of this chapter is to introduce the basic concepts of descriptive analysis, focusing on how to summarize and present data in meaningful ways. By the end of this chapter, students will:\n\n-   Be able to describe variables using both graphical and numerical methods\n\n\n## Two Major Parts of Statistics\n\nStatistics is divided into two main areas:\n\n1.  **Descriptive Analysis**: Summarizing and describing data.\n\n2.  **Inferential Analysis**: Making predictions or inferences about a population based on a sample.\n\nIn this chapter, we will focus on **descriptive analysis**, which can be further divided into **graphical** and **numerical** methods.\n\n\n\nLet's deepen your understanding of graphical and numerical descriptive methods, as well as how to implement these techniques using R.\n\n\n\n# Descriptive Analysis: Graphical Methods\n\nGraphical methods are crucial for understanding data at a glance. Depending on the number and type of variables, we use different graphical techniques. The graphical methods provided here are just some of the available methods for data visualization. There are many others that can be explored in more detail later. This is intended to be a basic introduction to help you get started.\n\n## Graphical Methods for a Single Variable\n\n| **Variable Type** | **Graphical Method** | **Description** |\n|------------------|------------------|------------------------------------|\n| **Categorical (Nominal / Ordinal)** | Bar Chart | Shows frequency or proportion of categories |\n| **Discrete (Integer)** | Histogram | Displays the count of values across defined intervals |\n|  | Dot Plot | Shows individual data points for small datasets |\n| **Continuous (Double)** | Histogram | Shows the frequency distribution of continuous values |\n|  | Box Plot | Displays distribution, including outliers |\n|  | Density Plot | Visualizes the density function |\n\n## Graphical Methods for Two Variable Visualization\n\n|   | **Categorical (Nominal / Ordinal)** | Numeric (Discrete / Continuous) |\n|------------------|-----------------------------|---------------------------|\n| **Categorical (Nominal / Ordinal)** | Stacked Bar Chart | Grouped Bar Chart |\n| **Numeric (Discrete / Continuous)** | Grouped Bar Chart | Scatter Plot |\n\n# Data Visualization Using R: Introduction to Grammar of Graphics\n\nData visualization in R can be effectively done using the `ggplot2` package, which is included in the popular `tidyverse` collection of R packages. `ggplot2` is based on the **Grammar of Graphics**, a structured approach that allows you to build plots layer by layer. This grammar provides a framework for describing and creating visualizations by combining different graphical elements. The idea is that any plot can be constructed by breaking it down into components.\n\nThe visualisation using `ggplot2` package, which follows the philosophy of grammar of graphics, breaks down a plot into several components:\n\n-   **Data**: The dataset you're working with.\n\n-   **Aesthetics**: The visual properties (e.g., axes, colors, sizes).\n\n-   **Geometries**: The type of plot (e.g., points, bars, lines).\n\n-   **Facets**: Dividing the data into subplots.\n\n-   **Scales**: Mapping of data values to visual properties.\n\n-   **Coordinates**: How data is projected onto the plane (e.g., Cartesian coordinates).\n\n#### What Happens When You Run `ggplot()`? {.unnumbered}\n\nWhen you run `ggplot()` in R without specifying any further components, it provides you with a blank \"canvas\" (or plane) on which you can build your plot. This is like opening a blank sheet of paper to start drawing. Here’s an example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Packages\n#install.packages(pacman)\n\npacman::p_load(tidyverse, here)\n\n# Load Data\n\ndf1 <- NHANES::NHANES\n\ndf1 <- df1 |> \n  janitor::clean_names()\n\ndf <- df1 |> \n  select(id, survey_yr, gender, age, race1, education, marital_status, hh_income, home_own, home_rooms, poverty, work, weight, height)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Running ggplot without specifying layers\nggplot()\n```\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis will simply give you a blank plot. You then need to add layers to specify what the plot will contain.\n\n#### Aesthetics (aes) {.unnumbered}\n\nAesthetic mappings define how data is mapped to visual properties. They include properties such as:\n\n-   x and y axes: Mapped to variables in your data.\n\n-   color: Used to differentiate categories.\n\n-   size: Used to represent magnitude or importance.\n\nFor example, when you add aesthetics to ggplot(), it tells R how to map data to the plot:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df, \n       mapping = aes(x = height, y = weight))\n```\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this example, `height` is mapped to the x-axis and `weight` to the y-axis\n\n#### Layers in `ggplot2` {.unnumbered}\n\nThe power of `ggplot2` lies in its layering system. After creating the base plot with `ggplot()`, you can add multiple layers.\n\nYou add these layers using the + operator\n\nFor Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adding layers to create a plot\nggplot(df, aes(x = height, y = weight)) +\n  geom_point() +\n  labs(title = \"Height vs Weight\",\n       caption = \"Source: NHANES Data\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere’s a breakdown of each layer in the example:\n\n-   `ggplot(df, aes(x = height, y = weight))`: This initializes the plot using the `df` dataset. Inside `aes()`, the *x-axis* is mapped to *xvariable (height)*, and the *y-axis* is mapped to *yvariable (weight)*. The aes() function defines aesthetic mappings, determining how data is represented visually.\n\n-   `geom_point()`: This adds a geometric layer, specifically a scatter plot, where each point represents an observation. It visualizes the relationship between x and y\n\n-   `labs(title = \"Height vs Weight\", caption = \"Source: NHANES Data\")`: This layer adds a title and a caption to the plot, making it more interpretable. The title helps to explain what the plot is displaying.\n\nEach layer builds on the previous one, progressively adding more information to the visualization.\n\n***Note***\n\nEvery geometric layer starts with `geom_` in ggplot2.\n\n# Visualising a Single Variable using R\n\nGraphical methods are essential for summarizing and understanding the distribution of a single variable. In this section, we will explore different types of plots for visualizing one variable, based on its type (nominal, ordinal, discrete, or continuous). The key graphical methods include bar charts, boxplots, histograms, and density plots.\n\n## Bar Chart\n\nA **bar chart** is used to represent categorical data (nominal or ordinal). Each bar represents the frequency (or count) of a category. It’s commonly used for visualizing nominal variables like gender or education level.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bar chart example for a nominal variable\n\nggplot(df, aes(x = gender)) +\n  geom_bar() +\n  labs(\n    title = \"Bar Chart of Gender\", \n    x = \"Gender\", \n    y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Boxplot\n\nA boxplot is used to represent the distribution of a continuous variable. It shows the median, quartiles, and potential outliers.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Boxplot example for a continuous variable\nggplot(df, aes(y = height)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot of Height\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Histogram\n\nA histogram is used to visualize the distribution of a continuous variable by dividing the data into bins and counting the number of observations in each bin. It’s useful for understanding the shape, spread, and central tendency of continuous variables like age or income.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram example for a continuous variable\nggplot(df, aes(x = height)) +\n  geom_histogram() +\n  labs(title = \"Histogram of Height\", x = \"Height\", y = \"Frequency\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere the x-axis represents height (a continuous variable), and the y-axis represents the frequency of observations in each height bin.\n\nWe can make the histogram more attractive.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df, aes(x = height)) +\n  geom_histogram(binwidth = 2, \n                 fill = \"blue\", \n                 color = \"black\") +\n  labs(title = \"Histogram of Height\", \n       x = \"Height\", \n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Density Plot\n\nA density plot is a smoothed version of a histogram, used for continuous data. It provides an estimate of the probability distribution of a continuous variable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Density plot example for a continuous variable\nggplot(df, aes(x = height)) +\n  geom_density(\n    alpha = 0.5) +\n  labs(\n    title = \"Density Plot of Height\", \n    x = \"Height\") +\ntheme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can represent the area under the curve using any color.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Density plot example for a continuous variable\nggplot(df, aes(x = height)) +\n  geom_density(\n    fill = \"green\", \n    alpha = 0.5) +\n  labs(\n    title = \"Density Plot of Height\", \n    x = \"Height\") +\ntheme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Combining Multiple Geometries: Overlaying Histogram and Density Plot\n\nOne of the strengths of `ggplot2` is its ability to add multiple geometric shapes (geoms) to a single plot. For example, you can overlay a **density plot** on top of a **histogram** to visualize both the frequency distribution and the smoothed probability distribution of a continuous variable in a single canvas.\n\nExample: Histogram and Density Plot Together\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combining histogram and density plot\n\n\nlibrary(ggplot2)\n\nggplot(df, aes(x = height)) +\n  # Histogram with density scaling\n  geom_histogram(\n    aes(y = after_stat(density)),        # Normalize the histogram to show density instead of counts\n    binwidth = 2,                # Sets the bin width for the histogram\n    fill = \"blue\",               # Fills the bars with blue color\n    color = \"black\",             # Outlines the bars with black\n    alpha = 0.6                  # Adds transparency to the bars\n  ) +\n  # Density plot\n  geom_density(\n    aes(y = after_stat(density)),        # Ensures the y-axis of density is consistent\n    color = \"red\",               # The density plot will be red\n    linewidth = 1                     # Thickness of the density line\n  ) +\n  # Labels\n  labs(\n    title = \"Histogram and Density Plot of Height\",  # Title for the plot\n    x = \"Height\",                                    # X-axis label\n    y = \"Density\"                                    # Y-axis label\n  ) +\n  theme_minimal()                                     # Apply a clean theme\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Visualising Two Variables using R\n\nWhen working with two variables, visualizing the relationship between them helps reveal patterns, associations, or differences. The appropriate plot depends on the types of variables involved (categorical, continuous, or a combination). In this section, we will explore different graphical methods for visualizing two variables: stacked bar charts, grouped bar charts, scatter plots, box plots by category, and regression lines with standard error.\n\n## Stacked Bar Chart\n\nA **stacked bar chart** is used when both variables are categorical. It displays the distribution of one variable while stacking the bars based on the categories of the second variable.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Stacked bar chart example for two categorical variables\n\nggplot(df, aes(x = gender, fill = race1)) +\n  geom_bar(position = \"stack\") +\n  labs(title = \"Stacked Bar Chart of Gender by Race\", x = \"Gender\", y = \"Count\", fill = \"Race\")\n```\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Grouped Bar Chart\n\nA grouped bar chart is another option for visualizing two categorical variables. Instead of stacking the bars, it places bars for each category side-by-side, allowing for a clearer comparison between categories.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Grouped bar chart example for two categorical variables\n\n\nggplot(df, aes(x = gender, fill = race1)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"Grouped Bar Chart of Gender by Race\", x = \"Gender\", y = \"Count\", fill = \"Race\")\n```\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Scatter Plot\n\nA scatter plot is used to visualize the relationship between two continuous variables. Each point on the plot represents an observation, and patterns like clusters, trends, or outliers can be detected.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot example for two continuous variables\nggplot(df, aes(x = height, y = weight)) +\n  geom_point() +\n  labs(title = \"Height vs Weight\",\n       caption = \"Source: NHANES Data\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Box Plot by Category\n\nA box plot by category is useful when comparing the distribution of a continuous variable across different categories of a categorical variable. It shows the median, quartiles, and potential outliers within each category.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plot example for a continuous variable by category\n\nggplot(df, aes(x = gender, y = height)) +\n  geom_boxplot() +\n  labs(title = \"Box Plot of Height by Gender\", x = \"Gender\", y = \"Height\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Combining Multiple Geometries: Scatter Plot with Regression Line\n\nA scatter plot with a regression line helps visualize the relationship between two continuous variables. Adding a regression line shows the trend, while the standard error (SE) band around the line indicates the uncertainty in the estimate of the relationship.\n\nWhile regression is an inferential method (used for making predictions or understanding relationships), the purpose of this example is to demonstrate how multiple geometries can be combined when visualizing two variables.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot with regression line and SE\n\n\nggplot(df, aes(x = height, y = weight)) +\n  geom_point(color = \"blue\", alpha = 0.6) +    # Add scatter plot points\n  geom_smooth(method = \"lm\",                   # Add a regression line\n              color = \"red\",                   # Set the color of the line\n              se = TRUE,                       # Add the SE band (uncertainty)\n              fill = \"lightgray\",              # Color of the SE band\n              size = 1) +                      # Set thickness of the line\n  labs(\n    title = \"Scatter Plot with Regression Line and SE Band\",  # Title\n    x = \"Height (cm)\",                                        # X-axis label\n    y = \"Weight (kg)\"                                         # Y-axis label\n  ) +\n  theme_minimal()                                              # Apply a clean theme\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Visualizing Three Variables using R\n\nWhen working with three variables, we can extend basic plots like scatter plots by adding a third variable as an aesthetic element such as color or fill. This allows us to represent more dimensions of the data in a single plot. One common approach is to use **color** to represent a categorical or continuous variable in a scatter plot.\n\nExample: Scatter Plot with Color for a Third Variable\n\nIn this example, we'll create a scatter plot of two continuous variables and use color to represent a third categorical variable. This can help identify patterns or groupings based on the third variable.\n\n#### Example {.unnumbered}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot with color representing a third variable\n\nggplot(df, \n       aes(x = height, \n           y = weight, \n           color = race1)) +\n  geom_point(size = 1, alpha = 0.5) +\n  labs(title = \"Scatter Plot of Height vs Weight by Race\", \n       x = \"Height\", y = \"Weight\", color = \"Race\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Another Way**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot with color representing a third variable\n\nggplot(df, \n       aes(x = height, \n           y = weight)) +\n  geom_point(size = 1) +\n    facet_wrap(~race1)+\n  labs(title = \"Scatter Plot of Height vs Weight by Race\", \n       x = \"Height\", y = \"Weight\", color = \"Race\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Visualizing Four Variables using R\n\nTo visualize four variables, we can use a combination of **color** (or fill) for the third variable and **facet wrapping** for the fourth variable. Facet wrapping creates a series of smaller plots based on the levels of a categorical variable, allowing us to compare the relationships across different subgroups.\n\nExample: Scatter Plot with Color and Facet Wrap\n\nIn this example, we’ll use a scatter plot with color representing a third variable, and facet wrapping to display different plots for each level of the fourth variable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot with color and facet wrap for a fourth variable\nggplot(df, \n       aes(x = height, \n           y = weight,\n           color = gender)) +\n  geom_point(size = 1) +\n    facet_wrap(~race1)+\n  labs(title = \"Scatter Plot of Height vs Weight by Race and gender\", \n       x = \"Height\", y = \"Weight\", color = \"Gender\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptive_statistics_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Descriptive Analysis: Numerical Methods\n\n<br>\n\nWelcome to the world of numerical descriptive methods! These techniques are your go-to tools for exploring data and understanding key concepts like distribution, central tendency, and variability. Think of them as helpful signs that guide you in figuring out how your data works.\n\nThese methods can be broadly categorized into two key areas: [measures of central tendency](measures_central_dispersion.html) and [measures of dispersion](measures_central_dispersion.html). Both are crucial for painting a comprehensive picture of your data. But before we get into the nitty-gritty, let’s consider something important: the choice of summary measures depends on the type of variable you’re working with. Whether you're dealing with categorical variables (like nominal and ordinal data) or numeric variables (which can be discrete or continuous), different summary statistics come into play.\n\n![Image by pikisuperstar on Freepik](images/descriptive_stat.jpg){fig-align=\"center\" width=\"300\"}\n\n<br>\n\n# Types of Variables and Summary Measures\n\nSo, what exactly should you use when analyzing your data? Let’s break it down!\n\n## Numerical Methods for a Single Variable\n\nWhen you're focusing on just one variable, numerical methods allow you to summarize and analyze your data through various statistical measures. For numeric variables, you can explore measures of central tendency like the mean, median, and mode. These give you a glimpse into the typical values of your dataset. But that's not all—measures of dispersion, such as standard deviation, variance, and range, tell you how spread out your data is.\n\nAnd don’t forget about categorical variables! For nominal and ordinal data, you can utilize frequency, proportion, and percentage to get a clearer picture of your dataset.\n\nHere’s a handy table to summarize the types of variables and their corresponding summary measures:\n\n+-----------------------------------------+----------------------------------------------------------+\n| **Type of Variable**                    | **Summary Measures**                                     |\n+=========================================+==========================================================+\n| **Categorical (Nominal / Ordinal)**     | Frequency, Proportion, Percentage, Cumulative proportion |\n+-----------------------------------------+----------------------------------------------------------+\n| **Numeric** **(Discrete / Continuous)** | Measures of Central Tendency,                            |\n|                                         |                                                          |\n|                                         | Measures of Dispersion                                   |\n+-----------------------------------------+----------------------------------------------------------+\n\n<br>\n\n## Numerical Methods for Two Variable\n\nWhen you’re analyzing two variables, the methods you choose will depend on the types of variables involved. If you're working with categorical variables, like nominal and ordinal, you might find yourself comparing frequencies or proportions.\n\nBut when numeric variables enter the equation, you've got a whole new set of tools at your disposal. Think correlation and comparing means—these methods help you uncover relationships and differences between the variables, bringing you closer to understanding the data dynamics at play.\n\nHere’s a breakdown of some of the choices available to you:\n\n+-------------------------------------+-------------------+----------------------+-------------------------------------+\n| **Type of Variables**               | **Nominal**       | **Ordinal**          | **Numeric (Discrete / Continuous)** |\n+=====================================+===================+======================+=====================================+\n| **Nominal**                         | Cross-tabulation  |                      |                                     |\n+-------------------------------------+-------------------+----------------------+-------------------------------------+\n| **Ordinal**                         | Cross-tabulation, | Cross-tabulation,    |                                     |\n|                                     |                   |                      |                                     |\n|                                     |                   | Spearman correlation |                                     |\n+-------------------------------------+-------------------+----------------------+-------------------------------------+\n| **Numeric (Discrete / Continuous)** | Compare means     | Spearman correlation | Correlation                         |\n+-------------------------------------+-------------------+----------------------+-------------------------------------+\n\n<br>\n\n# Numerical Methods for a Single Variable using R\n\nAs we mentioned earlier, there are various ways to describe variables based on their types. In this section, we’ll explore how to describe different variables using R. First, we’ll look at numerical variables (both discrete and continuous), and then we’ll dive into categorical variables (nominal and ordinal).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Describing a Single Numerical (Discrete / Categorical) Variable using R\n\nNow, let’s explore how to describe numerical variables. We can use various measures, including mean, median, range, standard deviation, interquartile range, and percentiles.\n\n### Mean\n\nThe mean is the average of all the data points.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean\ndf |> \n  summarise(mean_age = mean(age))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_age\n     <dbl>\n1     36.7\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Another Way**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  pull(age) |> \n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 36.7421\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat does `df |> pull(age)` means. Try yourself!\n\nNow lets find the mean height.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  summarise(mean_height = mean(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_height\n        <dbl>\n1          NA\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Why does the mean height show NA?**\n\nWhen you try calculating the mean of the height variable, you might notice that it returns NA. This happens because some individual observations for height have missing values (NA).\n\nTo solve this, we need to tell R to ignore those missing values when performing the calculation. For this, we use an additional argument in the `mean()` function: `na.rm = TRUE`. This argument stands for “remove NAs,” and when set to `TRUE`, it ensures the missing values are ignored, allowing R to calculate the mean based on the available data.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean while having NA values\n\ndf |> \n  summarise(mean_height = mean(height), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  mean_height na.rm\n        <dbl> <lgl>\n1          NA TRUE \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBy adding this small argument, you’ll get the correct mean without being tripped up by missing data!\n\n<br>\n\n### Median\n\nThe median is the middle value when the data is ordered.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the median\ndf |> \n  summarise(median_age = median(age))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  median_age\n       <dbl>\n1         36\n```\n\n\n:::\n\n```{.r .cell-code}\ndf |> \n  summarise(median_height = median(height, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  median_height\n          <dbl>\n1           166\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTry finding median using `pull` function from the `dplyr` package.\n\n<br>\n\n### Range\n\nThe range is the difference between the maximum and minimum values.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the range\n\ndf |> \n  pull(age) |> \n  range()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  0 80\n```\n\n\n:::\n\n```{.r .cell-code}\ndf |> \n  pull(height) |> \n  range(na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  83.6 200.4\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you want to find the maximum and minimum values separately, you can do this:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the Maximum\n\ndf |> \n  pull(age) |> \n  max()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate the Minimum\n\ndf |> \n  pull(age) |> \n  min()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n### Standard Deviation\n\nStandard deviation measures the amount of variation or dispersion in a variable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the standard deviation\ndf |> \n  pull(age) |> \n  sd()\n\ndf |> \n  pull(height) |> \n  sd(na.rm = T)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n### Percentiles\n\nPercentiles indicate the relative standing of a value within the dataset.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate specific percentiles (e.g., 25th and 75th percentiles)\n\ndf |> \n  pull(age) |> \n  quantile(probs = 0.25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n25% \n 17 \n```\n\n\n:::\n\n```{.r .cell-code}\ndf |> \n  pull(age) |> \n  quantile(probs = 0.75)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n75% \n 54 \n```\n\n\n:::\n\n```{.r .cell-code}\ndf |> \n  pull(age) |> \n  quantile(probs = c(0.25, 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n25% 75% \n 17  54 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n### Inter Quartile Range\n\nThe IQR is the range between the 25th percentile (Q1) and the 75th percentile (Q3).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the IQR\ndf |> \n  pull(age) |> \n  IQR()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere’s another way to approach this. We can estimate the third quartile, which represents the 75th percentile, and the first quartile, which corresponds to the 25th percentile. By calculating the difference between these two values, we arrive at the interquartile range (IQR).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the IQR\n\nq_1 <- df |> \n  pull(age) |> \n  quantile(probs = 0.25)\n\n\nq_3 <- df |> \n  pull(age) |> \n  quantile(probs = 0.75)\n\n\nq_3 - q_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n75% \n 37 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Combining Multiple Summary Measures\n\nIf you want to combine multiple measures as a single outcome, it is also possible.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  summarise(\n    min_age = min(age),\n    q1_age = quantile(age, prob = 0.25), \n    mean_age = mean(age),\n    median_age = median(age), \n    q3_age = quantile(age, prob = 0.75),\n    max_age = max(age)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 6\n  min_age q1_age mean_age median_age q3_age max_age\n    <int>  <dbl>    <dbl>      <dbl>  <dbl>   <int>\n1       0     17     36.7         36     54      80\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n## Describing a Single Categorical (Nominal / Ordinal) Variable using R\n\nNow let’s dive into categorical variables! When working with categorical data, we often summarize it using frequencies (how often each category appears), percentages (what proportion of the total each category makes up), and cumulative percentages (the running total of those percentages). Let’s explore how to do all of this in a tidy way using R.\n\nWe’ll continue working with the NHANES dataset to see this in action.\n\n<br>\n\n### Frequency\n\nFrequency tells us how many times each category appears in the data. Let’s calculate the frequency for the income variable (`hh_income`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the frequency of each category in 'hh_income'\n\nhh_income_frequency <- df |> \n  count(hh_income)\n\nhh_income_frequency\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 2\n   hh_income         n\n   <fct>         <int>\n 1 \" 0-4999\"       192\n 2 \" 5000-9999\"    254\n 3 \"10000-14999\"   543\n 4 \"15000-19999\"   527\n 5 \"20000-24999\"   617\n 6 \"25000-34999\"   958\n 7 \"35000-44999\"   863\n 8 \"45000-54999\"   784\n 9 \"55000-64999\"   621\n10 \"65000-74999\"   526\n11 \"75000-99999\"  1084\n12 \"more 99999\"   2220\n13  <NA>           811\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n### Percent\n\nNext, we’ll calculate the percentage for each category, which shows the relative proportion of each category within the dataset.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the percentage for each category in 'hh_income'\n\nhh_income_percent <- df  |> \n  count(hh_income) |> \n  mutate(percent = (n / sum(n)) * 100)\n\nhh_income_percent\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   hh_income         n percent\n   <fct>         <int>   <dbl>\n 1 \" 0-4999\"       192    1.92\n 2 \" 5000-9999\"    254    2.54\n 3 \"10000-14999\"   543    5.43\n 4 \"15000-19999\"   527    5.27\n 5 \"20000-24999\"   617    6.17\n 6 \"25000-34999\"   958    9.58\n 7 \"35000-44999\"   863    8.63\n 8 \"45000-54999\"   784    7.84\n 9 \"55000-64999\"   621    6.21\n10 \"65000-74999\"   526    5.26\n11 \"75000-99999\"  1084   10.8 \n12 \"more 99999\"   2220   22.2 \n13  <NA>           811    8.11\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<br>\n\n### Cumulative Percent\n\nCumulative percent shows the running total of percentages, which can help understand the distribution across categories as you move through them.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate cumulative percentage for 'hh_income'\n\nhh_income_cumulative <- df |> \n  count(hh_income) |> \n  mutate(percent = n / sum(n) * 100,\n         cumulative_percent = cumsum(percent))\n\nhh_income_cumulative\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 4\n   hh_income         n percent cumulative_percent\n   <fct>         <int>   <dbl>              <dbl>\n 1 \" 0-4999\"       192    1.92               1.92\n 2 \" 5000-9999\"    254    2.54               4.46\n 3 \"10000-14999\"   543    5.43               9.89\n 4 \"15000-19999\"   527    5.27              15.2 \n 5 \"20000-24999\"   617    6.17              21.3 \n 6 \"25000-34999\"   958    9.58              30.9 \n 7 \"35000-44999\"   863    8.63              39.5 \n 8 \"45000-54999\"   784    7.84              47.4 \n 9 \"55000-64999\"   621    6.21              53.6 \n10 \"65000-74999\"   526    5.26              58.8 \n11 \"75000-99999\"  1084   10.8               69.7 \n12 \"more 99999\"   2220   22.2               91.9 \n13  <NA>           811    8.11             100   \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Publication Ready Tables\n\nTo create publication-ready tables, you can use the `gtsummary` package in R. Here’s an example of how to generate a summary table for a single variable dataset:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load the gtsummary package if not already installed\n\n# install.packages(\"gtsummary\")\n\npacman::p_load(gtsummary)\n\n# Create a summary table for the dataset\nsummary_table <- df |> \n  select(age, gender, race1, height) |> \n  tbl_summary(\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\", \n                     all_categorical() ~ \"{n} ({p}%)\"),\n    digits = all_continuous() ~ 2\n  )\n\n# Print the table\nsummary_table\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"sjsepmqbuc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#sjsepmqbuc table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#sjsepmqbuc thead, #sjsepmqbuc tbody, #sjsepmqbuc tfoot, #sjsepmqbuc tr, #sjsepmqbuc td, #sjsepmqbuc th {\n  border-style: none;\n}\n\n#sjsepmqbuc p {\n  margin: 0;\n  padding: 0;\n}\n\n#sjsepmqbuc .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#sjsepmqbuc .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#sjsepmqbuc .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#sjsepmqbuc .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#sjsepmqbuc .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#sjsepmqbuc .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#sjsepmqbuc .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#sjsepmqbuc .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#sjsepmqbuc .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#sjsepmqbuc .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#sjsepmqbuc .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#sjsepmqbuc .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#sjsepmqbuc .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#sjsepmqbuc .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#sjsepmqbuc .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sjsepmqbuc .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#sjsepmqbuc .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#sjsepmqbuc .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#sjsepmqbuc .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sjsepmqbuc .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#sjsepmqbuc .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sjsepmqbuc .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#sjsepmqbuc .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sjsepmqbuc .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sjsepmqbuc .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sjsepmqbuc .gt_left {\n  text-align: left;\n}\n\n#sjsepmqbuc .gt_center {\n  text-align: center;\n}\n\n#sjsepmqbuc .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#sjsepmqbuc .gt_font_normal {\n  font-weight: normal;\n}\n\n#sjsepmqbuc .gt_font_bold {\n  font-weight: bold;\n}\n\n#sjsepmqbuc .gt_font_italic {\n  font-style: italic;\n}\n\n#sjsepmqbuc .gt_super {\n  font-size: 65%;\n}\n\n#sjsepmqbuc .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#sjsepmqbuc .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#sjsepmqbuc .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#sjsepmqbuc .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#sjsepmqbuc .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#sjsepmqbuc .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#sjsepmqbuc .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 10,000&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 10,000</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">36.74 (22.40)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">5,020 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">4,980 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">race1</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Black</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,197 (12%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">610 (6.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Mexican</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,015 (10%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    White</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">6,372 (64%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Other</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">806 (8.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">height</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">161.88 (20.19)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Unknown</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">353</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> Mean (SD); n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTry `df |> tbl_summary` without selecting variables.\n\n# Numerical Methods for Two Variables using R\n\nIn this section, we’ll dive into how to describe relationships between two variables using R. Depending on the types of variables—categorical or numeric—the methods vary. We’ll cover three main scenarios:\n\n-   Two categorical variables\n\n-   Two numeric variables\n\n-   One categorical and one numeric variable\n\n## Two Categorical Variables\n\nWhen working with two categorical variables, one of the most common ways to analyze the relationship between them is by using cross-tabulation.\n\nCross-tabulation creates a **contingency table** that shows the frequency distribution for each combination of categories.\n\nLet’s use the `gender` and `race1` variables in the NHANES dataset to explore this.\n\n#### Cross-Tabulation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cross-tabulation of 'gender' and 'race1'\ngender_race_table <- df %>%\n  count(gender, race1)\n\ngender_race_table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   gender race1        n\n   <fct>  <fct>    <int>\n 1 female Black      614\n 2 female Hispanic   320\n 3 female Mexican    452\n 4 female White     3221\n 5 female Other      413\n 6 male   Black      583\n 7 male   Hispanic   290\n 8 male   Mexican    563\n 9 male   White     3151\n10 male   Other      393\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis table shows how the categories of gender and race1 are distributed across each other. But to make this even more informative, let’s add percentages.\n\n#### Cross-Tabulation with Percentages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cross-tabulation with percentages\ngender_race_percent <- df %>%\n  count(gender, race1) %>%\n  group_by(gender) %>%\n  mutate(percent = n / sum(n) * 100)\n\ngender_race_percent\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n# Groups:   gender [2]\n   gender race1        n percent\n   <fct>  <fct>    <int>   <dbl>\n 1 female Black      614   12.2 \n 2 female Hispanic   320    6.37\n 3 female Mexican    452    9.00\n 4 female White     3221   64.2 \n 5 female Other      413    8.23\n 6 male   Black      583   11.7 \n 7 male   Hispanic   290    5.82\n 8 male   Mexican    563   11.3 \n 9 male   White     3151   63.3 \n10 male   Other      393    7.89\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis output gives us a clearer picture of the relationship between the two categorical variables by showing the percentage of each race within each gender group.\n\n## Two Numeric Variables\n\nWhen both variables are numeric, we can correlation to explore the relationship between them.\n\n#### Correlation\n\nCorrelation measures the strength and direction of the linear relationship between two numeric variables. The most common measure is Pearson’s correlation coefficient.\n\nLet’s calculate the correlation between `height` and `weight`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  drop_na(height, weight) |> \n  summarise(correlation = cor(height, weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  correlation\n        <dbl>\n1       0.749\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Another Way**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Correlation between height and weight\ndf %>%\n  summarise(correlation = cor(height, weight, use = \"complete.obs\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  correlation\n        <dbl>\n1       0.749\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere, `use = \"complete.obs\"` ensures that rows with missing values (NA) are ignored during the correlation calculation, just like `na.rm = TRUE` would do.\n\n## One categorical and One Numeric Variables\n\nWhen you have one categorical and one numeric variable, you’re often interested in comparing the distribution of the numeric variable across different categories. Group-wise summaries and box plots are common methods for this.\n\nLet’s look at the relationship between gender (categorical) and height (numeric).\n\nGroup-Wise Summaries We can calculate summary statistics (like mean and median) for height within each gender category.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group-wise summary of height by gender\ndf %>%\n  group_by(gender) %>%\n  summarise(\n    mean_height = mean(height, na.rm = TRUE),\n    median_height = median(height, na.rm = TRUE),\n    sd_height = sd(height, na.rm = TRUE),\n    iqr_height = IQR(height, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  gender mean_height median_height sd_height iqr_height\n  <fct>        <dbl>         <dbl>     <dbl>      <dbl>\n1 female        157.          161.      16.8       11.6\n2 male          167.          174.      21.9       13.2\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Publication Ready Tables for Two Variables\n\nWhen you need to present results in a polished, publication-ready format, the gtsummary package in R is an excellent tool. It allows you to easily create clean, professional tables summarizing relationships between two variables. Below is an example of how you can use gtsummary to generate a table for a two-variable analysis, showcasing how your results can be made ready for publication.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a publication-ready table for two categorical variables\ntable_cat <- df %>%\n  select(gender, race1) %>%\n  tbl_summary(by = gender, \n              label = race1 ~ \"Race/Ethnicity\") \n\n# Display the table\ntable_cat\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"piuucpcwgm\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#piuucpcwgm table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#piuucpcwgm thead, #piuucpcwgm tbody, #piuucpcwgm tfoot, #piuucpcwgm tr, #piuucpcwgm td, #piuucpcwgm th {\n  border-style: none;\n}\n\n#piuucpcwgm p {\n  margin: 0;\n  padding: 0;\n}\n\n#piuucpcwgm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#piuucpcwgm .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#piuucpcwgm .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#piuucpcwgm .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#piuucpcwgm .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#piuucpcwgm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#piuucpcwgm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#piuucpcwgm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#piuucpcwgm .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#piuucpcwgm .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#piuucpcwgm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#piuucpcwgm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#piuucpcwgm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#piuucpcwgm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#piuucpcwgm .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piuucpcwgm .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#piuucpcwgm .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#piuucpcwgm .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#piuucpcwgm .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piuucpcwgm .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#piuucpcwgm .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piuucpcwgm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#piuucpcwgm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piuucpcwgm .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#piuucpcwgm .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piuucpcwgm .gt_left {\n  text-align: left;\n}\n\n#piuucpcwgm .gt_center {\n  text-align: center;\n}\n\n#piuucpcwgm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#piuucpcwgm .gt_font_normal {\n  font-weight: normal;\n}\n\n#piuucpcwgm .gt_font_bold {\n  font-weight: bold;\n}\n\n#piuucpcwgm .gt_font_italic {\n  font-style: italic;\n}\n\n#piuucpcwgm .gt_super {\n  font-size: 65%;\n}\n\n#piuucpcwgm .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#piuucpcwgm .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#piuucpcwgm .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#piuucpcwgm .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#piuucpcwgm .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#piuucpcwgm .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#piuucpcwgm .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;female&lt;/strong&gt;&lt;br /&gt;&#10;N = 5,020&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>female</strong><br />\nN = 5,020<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;male&lt;/strong&gt;&lt;br /&gt;&#10;N = 4,980&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>male</strong><br />\nN = 4,980<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Race/Ethnicity</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Black</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">614 (12%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">583 (12%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Hispanic</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">320 (6.4%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">290 (5.8%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Mexican</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">452 (9.0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">563 (11%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    White</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">3,221 (64%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3,151 (63%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Other</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">413 (8.2%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (7.9%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you're comparing a numeric variable across categories (e.g., height by gender), use the `tbl_summary()` function with the `by` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a publication-ready table for a categorical and a numeric variables\n\ntable_cat_num <- df  |> \n  select(gender, height) |> \n  drop_na() |> \n  tbl_summary(by = gender, \n              label = height ~ \"Height\") \n\n# Display the table\ntable_cat_num\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"lenwdbhkya\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#lenwdbhkya table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#lenwdbhkya thead, #lenwdbhkya tbody, #lenwdbhkya tfoot, #lenwdbhkya tr, #lenwdbhkya td, #lenwdbhkya th {\n  border-style: none;\n}\n\n#lenwdbhkya p {\n  margin: 0;\n  padding: 0;\n}\n\n#lenwdbhkya .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#lenwdbhkya .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#lenwdbhkya .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#lenwdbhkya .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#lenwdbhkya .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#lenwdbhkya .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#lenwdbhkya .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#lenwdbhkya .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#lenwdbhkya .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#lenwdbhkya .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#lenwdbhkya .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#lenwdbhkya .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#lenwdbhkya .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#lenwdbhkya .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#lenwdbhkya .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lenwdbhkya .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#lenwdbhkya .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#lenwdbhkya .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#lenwdbhkya .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lenwdbhkya .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#lenwdbhkya .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lenwdbhkya .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#lenwdbhkya .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lenwdbhkya .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lenwdbhkya .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lenwdbhkya .gt_left {\n  text-align: left;\n}\n\n#lenwdbhkya .gt_center {\n  text-align: center;\n}\n\n#lenwdbhkya .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#lenwdbhkya .gt_font_normal {\n  font-weight: normal;\n}\n\n#lenwdbhkya .gt_font_bold {\n  font-weight: bold;\n}\n\n#lenwdbhkya .gt_font_italic {\n  font-style: italic;\n}\n\n#lenwdbhkya .gt_super {\n  font-size: 65%;\n}\n\n#lenwdbhkya .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#lenwdbhkya .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#lenwdbhkya .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#lenwdbhkya .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#lenwdbhkya .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#lenwdbhkya .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#lenwdbhkya .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;female&lt;/strong&gt;&lt;br /&gt;&#10;N = 4,847&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>female</strong><br />\nN = 4,847<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;male&lt;/strong&gt;&lt;br /&gt;&#10;N = 4,800&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>male</strong><br />\nN = 4,800<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Height</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">161 (154, 166)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">174 (166, 179)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> Median (Q1, Q3)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you need mean and standard deviation instead of median and IQR, then\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_cat_num <- df  |> \n  select(gender, height) |> \n  drop_na() |> \n  tbl_summary(\n    by = gender,\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\")\n  ) \n\n# Display the table\ntable_cat_num\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"lezbzygmgp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#lezbzygmgp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#lezbzygmgp thead, #lezbzygmgp tbody, #lezbzygmgp tfoot, #lezbzygmgp tr, #lezbzygmgp td, #lezbzygmgp th {\n  border-style: none;\n}\n\n#lezbzygmgp p {\n  margin: 0;\n  padding: 0;\n}\n\n#lezbzygmgp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#lezbzygmgp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#lezbzygmgp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#lezbzygmgp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#lezbzygmgp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#lezbzygmgp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#lezbzygmgp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#lezbzygmgp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#lezbzygmgp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#lezbzygmgp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#lezbzygmgp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#lezbzygmgp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#lezbzygmgp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#lezbzygmgp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#lezbzygmgp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lezbzygmgp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#lezbzygmgp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#lezbzygmgp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#lezbzygmgp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lezbzygmgp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#lezbzygmgp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lezbzygmgp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#lezbzygmgp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lezbzygmgp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lezbzygmgp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lezbzygmgp .gt_left {\n  text-align: left;\n}\n\n#lezbzygmgp .gt_center {\n  text-align: center;\n}\n\n#lezbzygmgp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#lezbzygmgp .gt_font_normal {\n  font-weight: normal;\n}\n\n#lezbzygmgp .gt_font_bold {\n  font-weight: bold;\n}\n\n#lezbzygmgp .gt_font_italic {\n  font-style: italic;\n}\n\n#lezbzygmgp .gt_super {\n  font-size: 65%;\n}\n\n#lezbzygmgp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#lezbzygmgp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#lezbzygmgp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#lezbzygmgp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#lezbzygmgp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#lezbzygmgp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#lezbzygmgp .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;female&lt;/strong&gt;&lt;br /&gt;&#10;N = 4,847&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>female</strong><br />\nN = 4,847<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;male&lt;/strong&gt;&lt;br /&gt;&#10;N = 4,800&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>male</strong><br />\nN = 4,800<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">height</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">157 (17)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">167 (22)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> Mean (SD)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "descriptive_statistics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}